{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTablet/PeopleTablet.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","classNames","sex","to","slug","name","PeopleTablet","people","selected","useParams","map","born","died","motherName","fatherName","mother","find","prsn","father","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","getPeopleFromServer","useEffect","length","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"2RASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,iBCZYQ,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,cAAC,IAAD,CACEF,UAAWG,IACT,CAAE,kBAAkC,MAAfD,EAAOE,MAE9BC,GAAIH,EAAOI,KAJb,SAMGJ,EAAOK,MAP+B,ECC9BC,EAAgC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChCC,EAAaC,cAAnBL,KAER,OACE,wBACE,UAAQ,cACRN,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGS,EAAOG,KAAI,SAAAV,GACV,IACEE,EAMEF,EANFE,IACAS,EAKEX,EALFW,KACAC,EAIEZ,EAJFY,KACAC,EAGEb,EAHFa,WACAC,EAEEd,EAFFc,WACAV,EACEJ,EADFI,KAGIW,EAA6BR,EAChCS,MAAK,SAAAC,GAAI,OAAIA,EAAKZ,OAASQ,CAAlB,IACNK,EAA6BX,EAChCS,MAAK,SAAAC,GAAI,OAAIA,EAAKZ,OAASS,CAAlB,IAEZ,OACE,qBAEE,UAAQ,SACRhB,UAAWG,IACT,CAAE,yBAA0BG,IAASI,IAJzC,UAOE,6BACE,cAAC,EAAD,CAAYR,OAAQA,MAGtB,6BAAKE,IACL,6BAAKS,IACL,6BAAKC,IACL,6BACGG,EACG,cAAC,EAAD,CAAYf,OAAQe,IACpBF,GAAc,MAEpB,6BACGK,EACG,cAAC,EAAD,CAAYlB,OAAQkB,IACpBJ,GAAc,QArBfV,EAyBV,QAIR,ECrEYe,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAGMC,EAAmB,iDAAG,8GAExBD,GAAa,GAFW,SAGDrC,IAHC,OAGlBO,EAHkB,OAKxB0B,EAAU1B,GALc,gDAOxB4B,GAAS,GACT/B,YAAW,kBAAM+B,GAAS,EAAf,GAAuB,KARV,yBAUxBE,GAAa,GAVW,4EAAH,qDAkBzB,OAJAE,qBAAU,WACRD,GACD,GAAE,IAGD,qCACE,oBAAI5B,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG0B,GAAc,cAAC,EAAD,IAEdF,GACC,mBAAG,UAAQ,qBAAqBxB,UAAU,kBAA1C,mCAKA0B,GAAajB,EAAOqB,OAAS,GAC7B,mBAAG,UAAQ,kBAAX,+CAKDrB,EAAOqB,OAAS,GAAK,cAAC,EAAD,CAAcrB,OAAQA,WAKrD,EC7CYsB,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR/B,UAAU,iCACVgC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKhC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEK,GAAG,IACHL,UAAW,gBAAGiC,EAAH,EAAGA,SAAH,OAAkB9B,IAC3B,cACA,CAAE,8BAA+B8B,GAFxB,EAFb,kBAUA,cAAC,IAAD,CACE5B,GAAG,UACHL,UAAW,gBAAGiC,EAAH,EAAGA,SAAH,OAAkB9B,IAC3B,cACA,CAAE,8BAA+B8B,GAFxB,EAFb,2BAaN,sBAAMjC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEkC,KAAK,IACLC,QAAS,oBAAInC,UAAU,QAAd,yBAGX,cAAC,IAAD,CACEkC,KAAK,QACLC,QAAS,cAAC,IAAD,CAAU9B,GAAG,IAAI+B,SAAO,MAGnC,cAAC,IAAD,CACEF,KAAK,IACLC,QAAS,oBAAInC,UAAU,QAAd,8BAGX,cAAC,IAAD,CAAOkC,KAAK,UAAUC,QAAS,cAAC,EAAD,IAA/B,SACE,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,iBAO3C,EC/DDE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.94aba260.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    className={classNames(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n    to={person.slug}\n  >\n    {person.name}\n  </Link>\n);\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTablet: React.FC<Props> = ({ people }) => {\n  const { slug: selected } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const mother: Person | undefined = people\n            .find(prsn => prsn.name === motherName);\n          const father: Person | undefined = people\n            .find(prsn => prsn.name === fatherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === selected },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTablet } from '../PeopleTablet';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // initial load\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n      const response = await getPeople();\n\n      setPeople(response);\n    } catch {\n      setError(true);\n      setTimeout(() => setError(false), 1000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length < 1 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && <PeopleTablet people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":slug?\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}